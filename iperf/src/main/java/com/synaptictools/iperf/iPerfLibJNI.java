/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.synaptictools.iperf;

public class iPerfLibJNI {
  public final static native long new_StringVector__SWIG_0();
  public final static native long new_StringVector__SWIG_1(long jarg1, StringVector jarg1_);
  public final static native boolean StringVector_isEmpty(long jarg1, StringVector jarg1_);
  public final static native void StringVector_clear(long jarg1, StringVector jarg1_);
  public final static native long new_StringVector__SWIG_2(int jarg1, String jarg2);
  public final static native int StringVector_doCapacity(long jarg1, StringVector jarg1_);
  public final static native void StringVector_doReserve(long jarg1, StringVector jarg1_, int jarg2);
  public final static native int StringVector_doSize(long jarg1, StringVector jarg1_);
  public final static native void StringVector_doAdd__SWIG_0(long jarg1, StringVector jarg1_, String jarg2);
  public final static native void StringVector_doAdd__SWIG_1(long jarg1, StringVector jarg1_, int jarg2, String jarg3);
  public final static native String StringVector_doRemove(long jarg1, StringVector jarg1_, int jarg2);
  public final static native String StringVector_doGet(long jarg1, StringVector jarg1_, int jarg2);
  public final static native String StringVector_doSet(long jarg1, StringVector jarg1_, int jarg2, String jarg3);
  public final static native void StringVector_doRemoveRange(long jarg1, StringVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_StringVector(long jarg1);
  public final static native void StringList_Iterator_set_unchecked(long jarg1, StringList.Iterator jarg1_, String jarg2);
  public final static native long StringList_Iterator_next_unchecked(long jarg1, StringList.Iterator jarg1_);
  public final static native long StringList_Iterator_previous_unchecked(long jarg1, StringList.Iterator jarg1_);
  public final static native String StringList_Iterator_deref_unchecked(long jarg1, StringList.Iterator jarg1_);
  public final static native long StringList_Iterator_advance_unchecked(long jarg1, StringList.Iterator jarg1_, int jarg2);
  public final static native void delete_StringList_Iterator(long jarg1);
  public final static native long new_StringList__SWIG_0();
  public final static native long new_StringList__SWIG_1(long jarg1, StringList jarg1_);
  public final static native boolean StringList_isEmpty(long jarg1, StringList jarg1_);
  public final static native void StringList_clear(long jarg1, StringList jarg1_);
  public final static native long StringList_remove(long jarg1, StringList jarg1_, long jarg2, StringList.Iterator jarg2_);
  public final static native void StringList_removeLast(long jarg1, StringList jarg1_);
  public final static native void StringList_removeFirst(long jarg1, StringList jarg1_);
  public final static native void StringList_addLast(long jarg1, StringList jarg1_, String jarg2);
  public final static native void StringList_addFirst(long jarg1, StringList jarg1_, String jarg2);
  public final static native long StringList_begin(long jarg1, StringList jarg1_);
  public final static native long StringList_end(long jarg1, StringList jarg1_);
  public final static native long StringList_insert(long jarg1, StringList jarg1_, long jarg2, StringList.Iterator jarg2_, String jarg3);
  public final static native long new_StringList__SWIG_2(int jarg1, String jarg2);
  public final static native int StringList_doSize(long jarg1, StringList jarg1_);
  public final static native int StringList_doPreviousIndex(long jarg1, StringList jarg1_, long jarg2, StringList.Iterator jarg2_);
  public final static native int StringList_doNextIndex(long jarg1, StringList jarg1_, long jarg2, StringList.Iterator jarg2_);
  public final static native boolean StringList_doHasNext(long jarg1, StringList jarg1_, long jarg2, StringList.Iterator jarg2_);
  public final static native void delete_StringList(long jarg1);
  public final static native long new_IntVector__SWIG_0();
  public final static native long new_IntVector__SWIG_1(long jarg1, IntVector jarg1_);
  public final static native boolean IntVector_isEmpty(long jarg1, IntVector jarg1_);
  public final static native void IntVector_clear(long jarg1, IntVector jarg1_);
  public final static native long new_IntVector__SWIG_2(int jarg1, int jarg2);
  public final static native int IntVector_doCapacity(long jarg1, IntVector jarg1_);
  public final static native void IntVector_doReserve(long jarg1, IntVector jarg1_, int jarg2);
  public final static native int IntVector_doSize(long jarg1, IntVector jarg1_);
  public final static native void IntVector_doAdd__SWIG_0(long jarg1, IntVector jarg1_, int jarg2);
  public final static native void IntVector_doAdd__SWIG_1(long jarg1, IntVector jarg1_, int jarg2, int jarg3);
  public final static native int IntVector_doRemove(long jarg1, IntVector jarg1_, int jarg2);
  public final static native int IntVector_doGet(long jarg1, IntVector jarg1_, int jarg2);
  public final static native int IntVector_doSet(long jarg1, IntVector jarg1_, int jarg2, int jarg3);
  public final static native void IntVector_doRemoveRange(long jarg1, IntVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_IntVector(long jarg1);
  public final static native void IntList_Iterator_set_unchecked(long jarg1, IntList.Iterator jarg1_, int jarg2);
  public final static native long IntList_Iterator_next_unchecked(long jarg1, IntList.Iterator jarg1_);
  public final static native long IntList_Iterator_previous_unchecked(long jarg1, IntList.Iterator jarg1_);
  public final static native int IntList_Iterator_deref_unchecked(long jarg1, IntList.Iterator jarg1_);
  public final static native long IntList_Iterator_advance_unchecked(long jarg1, IntList.Iterator jarg1_, int jarg2);
  public final static native void delete_IntList_Iterator(long jarg1);
  public final static native long new_IntList__SWIG_0();
  public final static native long new_IntList__SWIG_1(long jarg1, IntList jarg1_);
  public final static native boolean IntList_isEmpty(long jarg1, IntList jarg1_);
  public final static native void IntList_clear(long jarg1, IntList jarg1_);
  public final static native long IntList_remove(long jarg1, IntList jarg1_, long jarg2, IntList.Iterator jarg2_);
  public final static native void IntList_removeLast(long jarg1, IntList jarg1_);
  public final static native void IntList_removeFirst(long jarg1, IntList jarg1_);
  public final static native void IntList_addLast(long jarg1, IntList jarg1_, int jarg2);
  public final static native void IntList_addFirst(long jarg1, IntList jarg1_, int jarg2);
  public final static native long IntList_begin(long jarg1, IntList jarg1_);
  public final static native long IntList_end(long jarg1, IntList jarg1_);
  public final static native long IntList_insert(long jarg1, IntList jarg1_, long jarg2, IntList.Iterator jarg2_, int jarg3);
  public final static native long new_IntList__SWIG_2(int jarg1, int jarg2);
  public final static native int IntList_doSize(long jarg1, IntList jarg1_);
  public final static native int IntList_doPreviousIndex(long jarg1, IntList jarg1_, long jarg2, IntList.Iterator jarg2_);
  public final static native int IntList_doNextIndex(long jarg1, IntList jarg1_, long jarg2, IntList.Iterator jarg2_);
  public final static native boolean IntList_doHasNext(long jarg1, IntList jarg1_, long jarg2, IntList.Iterator jarg2_);
  public final static native void delete_IntList(long jarg1);
  public final static native long new_VecDouble__SWIG_0();
  public final static native long new_VecDouble__SWIG_1(long jarg1, VecDouble jarg1_);
  public final static native boolean VecDouble_isEmpty(long jarg1, VecDouble jarg1_);
  public final static native void VecDouble_clear(long jarg1, VecDouble jarg1_);
  public final static native long new_VecDouble__SWIG_2(int jarg1, double jarg2);
  public final static native int VecDouble_doCapacity(long jarg1, VecDouble jarg1_);
  public final static native void VecDouble_doReserve(long jarg1, VecDouble jarg1_, int jarg2);
  public final static native int VecDouble_doSize(long jarg1, VecDouble jarg1_);
  public final static native void VecDouble_doAdd__SWIG_0(long jarg1, VecDouble jarg1_, double jarg2);
  public final static native void VecDouble_doAdd__SWIG_1(long jarg1, VecDouble jarg1_, int jarg2, double jarg3);
  public final static native double VecDouble_doRemove(long jarg1, VecDouble jarg1_, int jarg2);
  public final static native double VecDouble_doGet(long jarg1, VecDouble jarg1_, int jarg2);
  public final static native double VecDouble_doSet(long jarg1, VecDouble jarg1_, int jarg2, double jarg3);
  public final static native void VecDouble_doRemoveRange(long jarg1, VecDouble jarg1_, int jarg2, int jarg3);
  public final static native void delete_VecDouble(long jarg1);
  public final static native void ListDouble_Iterator_set_unchecked(long jarg1, ListDouble.Iterator jarg1_, double jarg2);
  public final static native long ListDouble_Iterator_next_unchecked(long jarg1, ListDouble.Iterator jarg1_);
  public final static native long ListDouble_Iterator_previous_unchecked(long jarg1, ListDouble.Iterator jarg1_);
  public final static native double ListDouble_Iterator_deref_unchecked(long jarg1, ListDouble.Iterator jarg1_);
  public final static native long ListDouble_Iterator_advance_unchecked(long jarg1, ListDouble.Iterator jarg1_, int jarg2);
  public final static native void delete_ListDouble_Iterator(long jarg1);
  public final static native long new_ListDouble__SWIG_0();
  public final static native long new_ListDouble__SWIG_1(long jarg1, ListDouble jarg1_);
  public final static native boolean ListDouble_isEmpty(long jarg1, ListDouble jarg1_);
  public final static native void ListDouble_clear(long jarg1, ListDouble jarg1_);
  public final static native long ListDouble_remove(long jarg1, ListDouble jarg1_, long jarg2, ListDouble.Iterator jarg2_);
  public final static native void ListDouble_removeLast(long jarg1, ListDouble jarg1_);
  public final static native void ListDouble_removeFirst(long jarg1, ListDouble jarg1_);
  public final static native void ListDouble_addLast(long jarg1, ListDouble jarg1_, double jarg2);
  public final static native void ListDouble_addFirst(long jarg1, ListDouble jarg1_, double jarg2);
  public final static native long ListDouble_begin(long jarg1, ListDouble jarg1_);
  public final static native long ListDouble_end(long jarg1, ListDouble jarg1_);
  public final static native long ListDouble_insert(long jarg1, ListDouble jarg1_, long jarg2, ListDouble.Iterator jarg2_, double jarg3);
  public final static native long new_ListDouble__SWIG_2(int jarg1, double jarg2);
  public final static native int ListDouble_doSize(long jarg1, ListDouble jarg1_);
  public final static native int ListDouble_doPreviousIndex(long jarg1, ListDouble jarg1_, long jarg2, ListDouble.Iterator jarg2_);
  public final static native int ListDouble_doNextIndex(long jarg1, ListDouble jarg1_, long jarg2, ListDouble.Iterator jarg2_);
  public final static native boolean ListDouble_doHasNext(long jarg1, ListDouble jarg1_, long jarg2, ListDouble.Iterator jarg2_);
  public final static native void delete_ListDouble(long jarg1);

  static {
      try {
          System.loadLibrary("iperf-jni");
      } catch (UnsatisfiedLinkError e) {
          System.err.println("Failed to load native library 'traceroutelib'\n" + e);
      }
  }

  public final static native long new_iPerfNativeCallbacks();
  public final static native void delete_iPerfNativeCallbacks(long jarg1);
  public final static native void iPerfNativeCallbacks_onAppendResult(long jarg1, iPerfNativeCallbacks jarg1_, String jarg2);
  public final static native void iPerfNativeCallbacks_onAppendResultSwigExplicitiPerfNativeCallbacks(long jarg1, iPerfNativeCallbacks jarg1_, String jarg2);
  public final static native void iPerfNativeCallbacks_onClearResult(long jarg1, iPerfNativeCallbacks jarg1_);
  public final static native void iPerfNativeCallbacks_onClearResultSwigExplicitiPerfNativeCallbacks(long jarg1, iPerfNativeCallbacks jarg1_);
  public final static native void iPerfNativeCallbacks_director_connect(iPerfNativeCallbacks obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void iPerfNativeCallbacks_change_ownership(iPerfNativeCallbacks obj, long cptr, boolean take_or_release);
  public final static native long new_iPerfNative();
  public final static native void delete_iPerfNative(long jarg1);
  public final static native long iPerfNative_instance();
  public final static native void iPerfNative_deInit(long jarg1, iPerfNative jarg1_);
  public final static native void iPerfNative_init(long jarg1, iPerfNative jarg1_, String jarg2, int jarg3, String jarg4, int jarg5, int jarg6, boolean jarg7, boolean jarg8, boolean jarg9, char jarg10);
  public final static native int iPerfNative_execute(long jarg1, iPerfNative jarg1_);
  public final static native String iPerfNative_getHostname(long jarg1, iPerfNative jarg1_);
  public final static native void iPerfNative_setHostname(long jarg1, iPerfNative jarg1_, String jarg2);
  public final static native int iPerfNative_json_callback(long jarg1);
  public final static native int iPerfNative_getPort(long jarg1, iPerfNative jarg1_);
  public final static native void iPerfNative_setPort(long jarg1, iPerfNative jarg1_, int jarg2);
  public final static native String iPerfNative_getStreamTemplate(long jarg1, iPerfNative jarg1_);
  public final static native void iPerfNative_setStreamTemplate(long jarg1, iPerfNative jarg1_, String jarg2);
  public final static native int iPerfNative_getDuration(long jarg1, iPerfNative jarg1_);
  public final static native void iPerfNative_setDuration(long jarg1, iPerfNative jarg1_, int jarg2);
  public final static native int iPerfNative_getInterval(long jarg1, iPerfNative jarg1_);
  public final static native void iPerfNative_setInterval(long jarg1, iPerfNative jarg1_, int jarg2);
  public final static native boolean iPerfNative_isDebug(long jarg1, iPerfNative jarg1_);
  public final static native void iPerfNative_setDebug(long jarg1, iPerfNative jarg1_, boolean jarg2);
  public final static native boolean iPerfNative_isDownload(long jarg1, iPerfNative jarg1_);
  public final static native void iPerfNative_setDownload(long jarg1, iPerfNative jarg1_, boolean jarg2);
  public final static native boolean iPerfNative_isJson(long jarg1, iPerfNative jarg1_);
  public final static native void iPerfNative_setJson(long jarg1, iPerfNative jarg1_, boolean jarg2);
  public final static native boolean iPerfNative_isUseUDP(long jarg1, iPerfNative jarg1_);
  public final static native void iPerfNative_setUseUDP(long jarg1, iPerfNative jarg1_, boolean jarg2);
  public final static native void iPerfNative_director_connect(iPerfNative obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void iPerfNative_change_ownership(iPerfNative obj, long cptr, boolean take_or_release);
  public final static native long iPerfNative_SWIGUpcast(long jarg1);

  public static void SwigDirector_iPerfNativeCallbacks_onAppendResult(iPerfNativeCallbacks jself, String result) {
    jself.onAppendResult(result);
  }
  public static void SwigDirector_iPerfNativeCallbacks_onClearResult(iPerfNativeCallbacks jself) {
    jself.onClearResult();
  }
  public static void SwigDirector_iPerfNative_onAppendResult(iPerfNative jself, String result) {
    jself.onAppendResult(result);
  }
  public static void SwigDirector_iPerfNative_onClearResult(iPerfNative jself) {
    jself.onClearResult();
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
